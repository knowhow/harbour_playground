# =========================================================================
#     This makefile was generated by
#     Bakefile 0.2.9 (http://www.bakefile.org)
#     Do not modify, all changes will be overwritten!
# =========================================================================



# -------------------------------------------------------------------------
# These are configurable options:
# -------------------------------------------------------------------------

# The common installation prefix for binary and DLL files 
EXEC_PREFIX = C:\opt\bin

# C compiler 
CC = cl

# Standard preprocessor flags (common for CC and CXX) 
CPPFLAGS = 

# Standard linker flags 
LDFLAGS = 

# Sets which type of Harbour Libraries will be used at link stage: shared or static
# If you are creating a dynamic library (dll) then you must set HBLIBSTYPE=static
# valid values are [static,shared]
#   static - HBLIBSTYPE=shared : link with shared Harbour libraries
#   shared - HBLIBSTYPE=static : link with static Harbour libraries
HBLIBSTYPE = static

# Harbour lib version 
HBLIBVER = 21

# Path for the installed [x]Harbour compiler (bin,lib and include dirs) 
HB_INSTALL_PREFIX = C:\Hrbmsvc

# [x]Harbour compiler executable name 
HBCC = harbour

# Link with Harbour multithread libraries [no,yes]
HBMT = no

# ---------------------------------------------------------------
# [x]Harbour optional libraries
# ---------------------------------------------------------------
# Link in the Harbour TIP library [yes,no]
HBLIB_TIP = yes

# Link in the Harbour HBNETIO library [yes,no]
HBLIB_HBNETIO = yes

# Link in the Harbour FM library [yes,no]
HBLIB_FM = no

# Link in the Harbour CT library [yes,no]
HBLIB_CT = yes

# Link in the Harbour GTWIN library [yes,no]
HBLIB_GTWIN = yes

# Link in the Harbour GTXVT library [yes,no]
HBLIB_GTXVT = no

# Link in the Harbour GTWVT library [yes,no]
HBLIB_GTWVT = no

# Link in the Harbour GTCGI library [yes,no]
HBLIB_GTCGI = no

# Link in the Harbour GTSTD library [yes,no]
HBLIB_GTSTD = no

# Link in the Harbour GTPCA library [yes,no]
HBLIB_GTPCA = no

# ---------------------------------------------------------------
# [x]Harbour compiler options
# ---------------------------------------------------------------
# Standard flags for Harbour compiler 
HBFLAGS = -n -a -v -m -q0

# Type of Harbour compiled binaries [debug,release]
HBBUILD = release

# Output C source level (0=compact,1=normal,2=verbose,3=real C code) [0,1,2,3]
HBOUTSRCLEVEL = 0

# Warning level for the Harbour Compiler [0,1,2,3]
HBWARNL = 3

# Exit severity level for the Harbour Compiler [0,1,2]
HBEXITSL = 2

# Where to search for Harbour includes 
HB_INC_INSTALL = $(HB_INSTALL_PREFIX)\include

# Where to search for Harbour libs 
HB_LIB_INSTALL = $(HB_INSTALL_PREFIX)\lib\win\msvc

# Where the object and lib files are built 
__BUILDDIR__ = obj\vc_win32

# ---------------------------------------------------------------
# wxWidgets flags (version 2.8 required)
# ---------------------------------------------------------------
# 
# Where is wxWidgets installed 
HB_WITH_WX = C:\wxWidgets-2.8.11

# Encoding [ansi,unicode]
WX_ENCODING = unicode

#  [release,debug]
WX_BUILD = release



# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

### Variables: ###

PREFIX = $(HB_INSTALL_PREFIX)
SIZERS_CFLAGS = /MD$(__WX_DEBUG_INFO_10) /DWIN32 /I$(HB_INC_INSTALL) /W4 /O2 \
	/D_WINDOWS $(p) $(p_0) $(__WX_DEBUG_INFO_7) $(p_1) /Fd.\sizers.pdb \
	/Iinclude\wxHarbour /D__WXMSW__ /I$(HB_INC_INSTALL)\wxHarbour \
	/I$(HB_WITH_WX)\Include /I$(HB_WITH_WX)\lib\vc_lib\msw$(WX_LIBID) \
	/I..\..\include\wxHarbour $(CPPFLAGS) -D__HARBOUR__
SIZERS_OBJECTS =  \
	$(__BUILDDIR__)\sizers_login.obj \
	$(__BUILDDIR__)\sizers_main.obj
SIZERS_HBFLAGS = $(HBFLAGS) -gc$(HBOUTSRCLEVEL) -w$(HBWARNL) -es$(HBEXITSL) \
	$(__HBDEBUG__) $(__HBMTFLAG__) -dHB_OS_WIN_32 /I$(HB_INC_INSTALL) /D_WINDOWS \
	$(p) $(p_0) $(p_1) /Iinclude\wxHarbour /D__WXMSW__ \
	/I$(HB_INC_INSTALL)\wxHarbour /I$(HB_WITH_WX)\Include \
	/I$(HB_WITH_WX)\lib\vc_lib\msw$(WX_LIBID) /I..\..\include\wxHarbour

### Conditionally set variables: ###

!if "$(HBMT)" == "yes"
__HBMTLIB__ = mt
!endif
!if "$(HBMT)" == "yes"
__HBMTFLAG__ = -DHB_MT
!endif
!if "$(HBBUILD)" == "debug"
__HBDEBUG__ = -b -d_DEBUG_
!endif
!if "$(WX_BUILD)" == "release" && "$(WX_ENCODING)" == "ansi"
__WXHLIBNAME_p = wxHarbour.lib
!endif
!if "$(WX_BUILD)" == "debug" && "$(WX_ENCODING)" == "ansi"
__WXHLIBNAME_p = wxHarbour_$(WX_BUILD).lib
!endif
!if "$(WX_BUILD)" == "release" && "$(WX_ENCODING)" == "unicode"
__WXHLIBNAME_p = wxHarbour_$(WX_ENCODING).lib
!endif
!if "$(WX_BUILD)" == "debug" && "$(WX_ENCODING)" == "unicode"
__WXHLIBNAME_p = wxHarbour_$(WX_ENCODING)-$(WX_BUILD).lib
!endif
!if "$(HBLIBSTYPE)" == "static"
__LIB_HBEXTERN_p = hbextern.lib
!endif
!if "$(HBLIBSTYPE)" == "static"
__LIB_HBVM_p = hbvm$(__HBMTLIB__).lib
!endif
!if "$(HBLIBSTYPE)" == "static"
__LIB_HBRTL_p = hbrtl.lib
!endif
!if "$(HBLIBSTYPE)" == "static"
__LIB_HBLANG_p = hblang.lib
!endif
!if "$(HBLIBSTYPE)" == "static"
__LIB_HBCPAGE_p = hbcpage.lib
!endif
!if "$(HBLIB_GTCGI)" == "yes"
__LIB_GTCGI_p = gtcgi.lib
!endif
!if "$(HBLIB_GTSTD)" == "yes"
__LIB_GTSTD_p = gtstd.lib
!endif
!if "$(HBLIB_GTPCA)" == "yes"
__LIB_GTPCA_p = gtpca.lib
!endif
!if "$(HBLIB_GTXVT)" == "yes"
__LIB_GTXVT_p = gtxvt.lib
!endif
!if "$(HBLIB_GTWIN)" == "yes"
__LIB_GTWIN_p = gtwin.lib
!endif
!if "$(HBLIB_GTWVT)" == "yes"
__LIB_GTWVT_p = gtwvt.lib
!endif
!if "$(HBLIBSTYPE)" == "static"
__LIB_HBRDD_p = hbrdd.lib
!endif
!if "$(HBLIBSTYPE)" == "static"
__LIB_HBUDDALL_p = hbuddall.lib
!endif
!if "$(HBLIBSTYPE)" == "static"
__LIB_HBUSRRDD_p = hbusrrdd.lib
!endif
!if "$(HBLIBSTYPE)" == "static"
__LIB_RDDNTX_p = rddntx.lib
!endif
!if "$(HBLIBSTYPE)" == "static"
__LIB_RDDCDX_p = rddcdx.lib
!endif
!if "$(HBLIBSTYPE)" == "static"
__LIB_RDDNSX_p = rddnsx.lib
!endif
!if "$(HBLIBSTYPE)" == "static"
__LIB_RDDFPT_p = rddfpt.lib
!endif
!if "$(HBLIBSTYPE)" == "static"
__LIB_HBHSX_p = hbhsx.lib
!endif
!if "$(HBLIBSTYPE)" == "static"
__LIB_HBSIX_p = hbsix.lib
!endif
!if "$(HBLIBSTYPE)" == "static"
__LIB_HBMACRO_p = hbmacro.lib
!endif
!if "$(HBLIBSTYPE)" == "static"
__LIB_HBPP_p = hbpp.lib
!endif
!if "$(HBLIBSTYPE)" == "static"
__LIB_HBCOMMON_p = hbcommon.lib
!endif
!if "$(HBLIBSTYPE)" == "static"
__LIB_HBPCRE_p = hbpcre.lib
!endif
!if "$(HBLIB_FM)" == "yes"
__LIB_HBFM_p = hbfm.lib
!endif
!if "$(HBLIB_CT)" == "yes"
__LIB_HBCT_p = hbct.lib
!endif
!if "$(HBLIB_TIP)" == "yes"
__LIB_HBTIP_p = hbtip.lib
!endif
!if "$(HBLIB_HBNETIO)" == "yes"
__LIB_HBNETIO_p = hbnetio.lib
!endif
!if "$(HBLIBSTYPE)" == "shared"
__SLIB_HARBOUR_p = harbour-$(HBLIBVER).lib
!endif
!if "$(WX_BUILD)" == "debug"
__WX_DEBUG_INFO_7 = /Zi
!endif
!if "$(WX_BUILD)" == "debug"
__WX_DEBUG_INFO_8 = /DEBUG
!endif
!if "$(WX_BUILD)" == "debug"
__WX_DEBUG_INFO_10 = d
!endif
!if "$(WX_BUILD)" == "debug"
__WX_DEBUG_INFO_12 = 
!endif
!if "$(WX_ENCODING)" == "unicode"
p = /D_UNICODE
!endif
!if "$(WX_BUILD)" == "debug"
p_0 = /D__WXDEBUG__
!endif
!if "$(WX_BUILD)" == "debug"
p_1 = /D_DEBUG
!endif
!if "$(WX_BUILD)" == "debug" && "$(WX_ENCODING)" == "ansi"
WX_LIBID = d
!endif
!if "$(WX_BUILD)" == "debug" && "$(WX_ENCODING)" == "unicode"
WX_LIBID = ud
!endif
!if "$(WX_BUILD)" == "release" && "$(WX_ENCODING)" == "unicode"
WX_LIBID = u
!endif


all: $(__BUILDDIR__)
$(__BUILDDIR__):
	-if not exist $(__BUILDDIR__) mkdir $(__BUILDDIR__)

### Targets: ###

all: .\sizers.exe

install: 

uninstall: 

clean: 
	-if exist $(__BUILDDIR__)\*.obj del $(__BUILDDIR__)\*.obj
	-if exist $(__BUILDDIR__)\*.res del $(__BUILDDIR__)\*.res
	-if exist $(__BUILDDIR__)\*.pch del $(__BUILDDIR__)\*.pch
	-if exist .\sizers.exe del .\sizers.exe
	-if exist .\sizers.ilk del .\sizers.ilk
	-if exist .\sizers.pdb del .\sizers.pdb

.\sizers.exe: $(SIZERS_OBJECTS)
	link /NOLOGO /OUT:$@  /SUBSYSTEM:WINDOWS /LIBPATH:$(HB_LIB_INSTALL) $(__WX_DEBUG_INFO_8) /pdb:".\sizers.pdb" $(__WX_DEBUG_INFO_12) /LIBPATH:$(HB_WITH_WX)\lib\vc_lib /LIBPATH:..\..\$(__BUILDDIR__) $(LDFLAGS) @<<
	$(SIZERS_OBJECTS)   $(__WXHLIBNAME_p) $(__LIB_HBEXTERN_p) hbdebug.lib $(__LIB_HBVM_p) $(__LIB_HBRTL_p) $(__LIB_HBLANG_p) $(__LIB_HBCPAGE_p) $(__LIB_GTCGI_p) $(__LIB_GTSTD_p) $(__LIB_GTPCA_p) $(__LIB_GTXVT_p) $(__LIB_GTWIN_p) $(__LIB_GTWVT_p) hbwin.lib $(__LIB_HBRDD_p) $(__LIB_HBUDDALL_p) $(__LIB_HBUSRRDD_p) $(__LIB_RDDNTX_p) $(__LIB_RDDCDX_p) $(__LIB_RDDNSX_p) $(__LIB_RDDFPT_p) $(__LIB_HBHSX_p) $(__LIB_HBSIX_p) $(__LIB_HBMACRO_p) hbcplr.lib $(__LIB_HBPP_p) $(__LIB_HBCOMMON_p) $(__LIB_HBPCRE_p) $(__LIB_HBFM_p) $(__LIB_HBCT_p) $(__LIB_HBTIP_p) $(__LIB_HBNETIO_p) $(__SLIB_HARBOUR_p) wxmsw28$(WX_LIBID)_richtext.lib wxmsw28$(WX_LIBID)_aui.lib wxmsw28$(WX_LIBID)_html.lib wxmsw28$(WX_LIBID)_xrc.lib wxmsw28$(WX_LIBID)_adv.lib wxmsw28$(WX_LIBID)_core.lib wxbase28$(WX_LIBID).lib wxbase28$(WX_LIBID)_net.lib wxbase28$(WX_LIBID)_xml.lib wxtiff.lib wxjpeg.lib wxpng.lib wxzlib.lib wxregex$(WX_LIBID).lib wxexpat.lib kernel32.lib user32.lib gdi32.lib advapi32.lib ws2_32.lib winspool.lib comctl32.lib comdlg32.lib shell32.lib uuid.lib rpcrt4.lib wsock32.lib ole32.lib oleaut32.lib mpr.lib winmm.lib mapi32.lib imm32.lib msimg32.lib wininet.lib
<<

run: all
	.\sizers.exe

$(__BUILDDIR__)\sizers_login.obj: .\login.prg
	$(HBCC) $(SIZERS_HBFLAGS) -o$@_.c $**
	$(CC) /c $(SIZERS_CFLAGS) /Fo$@ $@_.c

$(__BUILDDIR__)\sizers_main.obj: .\main.prg
	$(HBCC) $(SIZERS_HBFLAGS) -o$@_.c $**
	$(CC) /c $(SIZERS_CFLAGS) /Fo$@ $@_.c

